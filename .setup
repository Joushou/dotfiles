#!/bin/bash
#
# Detect platform
#

cd ~

GITPATH=https://github.com/Joushou/dotfiles.git

RED_START=""
GREEN_START=""
COLOR_END=""

case $TERM in
	xterm*)
		RED_START="\033[1;31m"
		GREEN_START="\033[1;32m"
		WHITE_START="\033[1;37m"
		COLOR_END="\033[0m"
		;;
	screen*)
		RED_START="\033[1;31m"
		GREEN_START="\033[1;32m"
		WHITE_START="\033[1;37m"
		COLOR_END="\033[0m"
		;;
esac

error() {
	printf '%b' "$RED_START! $1$COLOR_END\n"
	exit 1
}

log() {
	printf '%b' "$WHITE_START> $1$COLOR_END\n"
}

run() {
	printf '%b' "$WHITE_START>    $1$COLOR_END\n"
	if ${@#$1}
	then
		return 0
	else
		error "FAILED"
	fi
}

setup_git() {
	log "Setting up repo"
	# Hacky "DIR IS NOT EMPTY!" workaround
	run "Init git" git init
	run "Add remote" git remote add origin $GITPATH
	run "Pull master" git pull --force origin master
	run "Init submodules" git submodule update --init
}

setup_vim() {
	log "Setting up VIM"
	run "Make extra .vim subdirectories" mkdir .vim/backup .vim/swap .vim/undo
	run "Install plugins" vim +PluginInstall +qall
	run "Make tty sane" stty sane
}

setup() {
	setup_git
	setup_vim
}

osx_conf() {
	log "Configuring OS X"
	run "Be silent on boot" sudo nvram SystemAudioVolume=" "
	run "Increase window resize speed" defaults write NSGlobalDomain NSWindowResizeTime -float 0.001
	run "Faster mission control" defaults write com.apple.dock expose-animation-duration -float 0.1
	run "Fast key repeat" defaults write NSGlobalDomain KeyRepeat -int 0
	run "Always use sub-pixel font rendering" defaults write NSGlobalDomain AppleFontSmoothing -int 2
	run "Dock scaling effect" defaults write com.apple.dock mineffect -string "scale"
	run "Terminal UTF-8 mode" defaults write com.apple.terminal StringEncodings -array 4
}

pre_osx() {
	osx_conf

	log "Installing packages"
	which brew > /dev/null || run "Install brew" ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

	run "Update brew" brew update
	run "Upgrade brew" brew upgrade
	run "Check brew" brew doctor

	run "Install dupe tap" brew tap homebrew/dupes

	run "Setup cask" brew install caskroom/cask/brew-cask

	# shell stuff
	run "Shell stuff" brew install tmux zsh coreutils findutils grep ascii

	# code stuff
	run "Code stuff" brew install autoconf automake ctags go git

	# editor stuff
	run "VIM" brew install vim
	run "MacVIM" brew cask install macvim
}

post_osx() {
	log "Cleaning up"
	run "Git" git gc --aggressive
	run "Brew" brew cleanup
}

pre_linux() {
	log "Installing packages"
	if which apt-get > /dev/null
	then
		log "Using APT"
		# shell stuff
		run "Shell stuff" sudo apt-get install tmux zsh ascii

		# code stuff
		run "Code stuff" sudo apt-get install binutils autoconf automake ctags gdb clang golang git

		# editor stuff
		run "VIM" sudo apt-get install vim
	else
		error "Package manager unknown"
	fi
}

post_linux() {
	log "Cleaning up"
	run "Git" git gc --aggressive
}

log "Starting setup"

run "Requesting sudo rights" sudo -v

case "$OSTYPE" in
	darwin*)
		log "OS X detected"
		pre_osx
		setup
		post_osx
		;;
	linux*)
		log "Linux detected"
		pre_linux
		setup
		post_linux
		;;
	*)
		# We might just be on a dash-based OS which doesn't give us OSTYPE (ubuntu/debian)
		if [ -e /etc/debian_version ]
		then
			pre_linux
			setup
			post_linux
		else
			
			error "Platform of type $OSTYPE not supported"
		fi
		;;
esac

log "All done"
